buildscript {
    repositories {
        maven { url = 'https://files.minecraftforge.net/maven' }
        jcenter()
        mavenCentral()
        maven {
            name = 'CrowdinTranslate source'
            url = "https://minecraft.guntram.de/maven/"
        }
    }
    dependencies {
        classpath 'de.guntram.mcmod:crowdin-translate:1.3+1.17'
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
    }
}

plugins {
    id "com.modrinth.minotaur" version "1.1.0"
    id "com.matthewprenger.cursegradle" version "1.4.0"
    id 'com.github.johnrengelman.shadow' version '7.0.0'
}

apply plugin: 'de.guntram.mcmod.crowdin-translate'
crowdintranslate.crowdinProjectName = 'worldtime'

apply plugin: 'net.minecraftforge.gradle'
//Only edit below this line, the above code adds and enables the necessary things for Forge to be setup.
apply plugin: 'eclipse'
apply plugin: 'maven-publish'
apply plugin: "com.matthewprenger.cursegradle"

version = "1.17.1-forge37.0.13-1.3.1"
group = "de.guntram.mcmod.worldtime" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "worldtime"

java.toolchain.languageVersion = JavaLanguageVersion.of(16)
println('Java: ' + System.getProperty('java.version') + ' JVM: ' + System.getProperty('java.vm.version') + '(' + System.getProperty('java.vendor') + ') Arch: ' + System.getProperty('os.arch'))

minecraft {
    mappings channel: 'official', version: '1.17.1'
}

dependencies {
    minecraft 'net.minecraftforge:forge:1.17.1-37.0.13'
}

// Example for how to get properties into the manifest for reading by the runtime..
jar {
    manifest {
        attributes([
            "Specification-Title": "worldtime",
            "Specification-Vendor": "Giselbaer",
            "Specification-Version": "1", // We are version 1 of ourselves
            "Implementation-Title": project.name,
            "Implementation-Version": "${version}",
            "Implementation-Vendor" :"Giselbaer",
            "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

shadowJar {
   configurations = []
   relocate 'de.guntram.mcmod.GBForgetools', 'de.guntram.mcmod.GBForgetools.WorldTime'
   classifier ''	// replace the default JAR
}

reobf {
    shadowJar {}
}

import com.modrinth.minotaur.TaskModrinthUpload

task publishModrinth (type: TaskModrinthUpload){

    token = System.getenv("MODRINTH_TOKEN")
    projectId = 'uCcYS9la'
    versionNumber = project.version
    versionName = project.archivesBaseName
    releaseType = 'release'
    uploadFile = jar // This is the java jar task
    addGameVersion("1.17.1")
    addLoader('forge')
}

curseforge {
    apiKey = System.getenv("CURSEFORGE_TOKEN")
    project {
        id = '355747'
        releaseType = 'release'
        addGameVersion("1.17.1")
        addGameVersion("Java 16")
        addGameVersion("Forge")
        mainArtifact(jar)
    }
    options {
        forgeGradleIntegration = true
    }
}
